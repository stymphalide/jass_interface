var _user$project$View$notFoundView = A2(
	_elm_lang$html$Html$div,
	{ctor: '[]'},
	{
		ctor: '::',
		_0: _elm_lang$html$Html$text('Not found'),
		_1: {ctor: '[]'}
	});
var _user$project$View$btn = F2(
	function (txt, path) {
		return A2(
			_elm_lang$html$Html$a,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('btn block mx-auto'),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$href(path),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text(txt),
				_1: {ctor: '[]'}
			});
	});
var _user$project$View$init = A2(
	_elm_lang$html$Html$div,
	{ctor: '[]'},
	{
		ctor: '::',
		_0: A2(_user$project$View$btn, 'Play New Game', 'play/0'),
		_1: {
			ctor: '::',
			_0: A2(_user$project$View$btn, 'Watch Previous Game', 'watch/0'),
			_1: {ctor: '[]'}
		}
	});
var _user$project$View$page = function (model) {
	var _p0 = model.route;
	switch (_p0.ctor) {
		case 'Init':
			return _user$project$View$init;
		case 'Play':
			return _user$project$Game_View$view(model.game);
		case 'Watch':
			return _user$project$Game_View$view(model.game);
		default:
			return _user$project$View$notFoundView;
	}
};
var _user$project$View$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _user$project$View$page(model),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html$text(
					_elm_lang$core$Basics$toString(model.windowSize)),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html$text(
						_elm_lang$core$Basics$toString(model.game)),
					_1: {ctor: '[]'}
				}
			}
		});
};
