var _user$project$Updates$fetchGame = F4(
	function (model, mode, mGameCoord, mPlayer) {
		var _p0 = mode;
		switch (_p0.ctor) {
			case 'Init':
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			case 'Play':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: A2(_user$project$Commands$fetchPlay, _p0._0, _p0._1)
				};
			case 'Watch':
				var _p6 = _p0._1;
				var _p5 = _p0._0;
				var _p1 = mGameCoord;
				if (_p1.ctor === 'Nothing') {
					var _p2 = mPlayer;
					if (_p2.ctor === 'Nothing') {
						return {
							ctor: '_Tuple2',
							_0: model,
							_1: A3(
								_user$project$Commands$fetchWatch,
								_p5,
								_p6,
								{ctor: '_Tuple2', _0: 0, _1: 0})
						};
					} else {
						return {
							ctor: '_Tuple2',
							_0: model,
							_1: A3(
								_user$project$Commands$fetchWatch,
								_p5,
								_p2._0,
								{ctor: '_Tuple2', _0: 0, _1: 0})
						};
					}
				} else {
					var _p4 = _p1._0;
					var _p3 = mPlayer;
					if (_p3.ctor === 'Nothing') {
						return {
							ctor: '_Tuple2',
							_0: model,
							_1: A3(_user$project$Commands$fetchWatch, _p5, _p6, _p4)
						};
					} else {
						return {
							ctor: '_Tuple2',
							_0: model,
							_1: A3(_user$project$Commands$fetchWatch, _p5, _p3._0, _p4)
						};
					}
				}
			default:
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: _user$project$Commands$fetchLobby(_p0._0)
				};
		}
	});
var _user$project$Updates$makeConstant = function (iPlayer) {
	var _p7 = iPlayer;
	if (_p7.ctor === 'Changing') {
		return _user$project$Models$Constant(_p7._0);
	} else {
		return iPlayer;
	}
};
var _user$project$Updates$playerChange = F2(
	function (input, model) {
		var _p8 = input;
		if (_p8.ctor === 'Update') {
			var _p9 = model.player;
			if (_p9.ctor === 'Changing') {
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							player: _user$project$Models$Changing(_p8._0)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			} else {
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			}
		} else {
			var pl = _user$project$Updates$makeConstant(model.player);
			return {
				ctor: '_Tuple2',
				_0: _elm_lang$core$Native_Utils.update(
					model,
					{player: pl}),
				_1: _elm_lang$core$Platform_Cmd$none
			};
		}
	});
var _user$project$Updates$onLocationChange = F2(
	function (mode, model) {
		var _p10 = mode;
		switch (_p10.ctor) {
			case 'Init':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{mode: _user$project$Models$Init}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Watch':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							mode: A2(_user$project$Models$Watch, _p10._0, _p10._1)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Lobby':
				var _p11 = _p10._0;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							mode: _user$project$Models$Lobby(_p11)
						}),
					_1: _user$project$Commands$fetchLobby(_p11)
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							mode: A2(_user$project$Models$Play, _p10._0, _p10._1)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$Updates$update = F2(
	function (msg, model) {
		var _p12 = msg;
		switch (_p12.ctor) {
			case 'OnLocationChange':
				return A2(_user$project$Updates$onLocationChange, _p12._0, model);
			case 'PlayerChange':
				return A2(_user$project$Updates$playerChange, _p12._0, model);
			case 'GameUpdate':
				var mNewGame = _user$project$Game_Update$updateGame(_p12._0);
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{game: mNewGame}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'FetchGame':
				return A4(_user$project$Updates$fetchGame, model, model.mode, _p12._0, _p12._1);
			case 'GameIdUpdate':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							gameId: _elm_lang$core$Maybe$Just(_p12._0)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'LobbyUpdate':
				var mPlayer = function () {
					var _p13 = model.player;
					if (_p13.ctor === 'Changing') {
						return _elm_lang$core$Maybe$Nothing;
					} else {
						return _elm_lang$core$Maybe$Just(_p13._0);
					}
				}();
				var mLobby = _user$project$Game_Update$updateLobby(_p12._0);
				var _p14 = mLobby;
				if (_p14.ctor === 'Nothing') {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				} else {
					var _p15 = _p14._0;
					if (_p15.ctor === 'Players') {
						return {
							ctor: '_Tuple2',
							_0: _elm_lang$core$Native_Utils.update(
								model,
								{
									mode: _user$project$Models$Lobby(_p15._0)
								}),
							_1: _elm_lang$core$Platform_Cmd$none
						};
					} else {
						var _p17 = _p15._0;
						var _p16 = mPlayer;
						if (_p16.ctor === 'Nothing') {
							return {
								ctor: '_Tuple2',
								_0: _elm_lang$core$Native_Utils.update(
									model,
									{mode: _user$project$Models$Init}),
								_1: _elm_lang$core$Platform_Cmd$none
							};
						} else {
							return {
								ctor: '_Tuple2',
								_0: _elm_lang$core$Native_Utils.update(
									model,
									{
										mode: A2(_user$project$Models$Play, _p17, _p16._0),
										gameId: _elm_lang$core$Maybe$Just(_p17)
									}),
								_1: _elm_lang$core$Platform_Cmd$none
							};
						}
					}
				}
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{windowSize: _p12._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
